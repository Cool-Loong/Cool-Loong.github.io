<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Markdown学习</title>
      <link href="/2018/12/22/Markdown%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/12/22/Markdown%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="设置标题"><a href="#设置标题" class="headerlink" title="设置标题"></a>设置标题</h1><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># h1标题</span><br><span class="line">## h2标题</span><br><span class="line">### h3标题</span><br><span class="line">#### h4标题</span><br><span class="line">##### h5标题</span><br><span class="line">###### h6标题</span><br><span class="line"></span><br><span class="line">h1标题（另一种写法）</span><br><span class="line">===</span><br><span class="line">h2标题（另一种写法）</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h1 id="自然段改行"><a href="#自然段改行" class="headerlink" title="自然段改行"></a>自然段改行</h1>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>tensorflow</title>
      <link href="/2018/12/21/tensorflow-1/"/>
      <url>/2018/12/21/tensorflow-1/</url>
      
        <content type="html"><![CDATA[<h1 id="1-忽略CPU警告"><a href="#1-忽略CPU警告" class="headerlink" title="1.忽略CPU警告"></a>1.忽略CPU警告</h1><p>import os<br>os.environ[‘TF_CPP_MIN_LOG_LEVEL’]=’2’  </p><h1 id="2-运行TensorFlow"><a href="#2-运行TensorFlow" class="headerlink" title="2.运行TensorFlow"></a>2.运行TensorFlow</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import tensorflow as tf   </span><br><span class="line">hello = tf.constant(&apos;Hello, TensorFlow!&apos;)  </span><br><span class="line">sess = tf.Session()  </span><br><span class="line">print(sess.run(hello))  </span><br><span class="line">print(&quot;hello world!!&quot;)  </span><br><span class="line">注意：  </span><br><span class="line">global_variables_initializer()替换</span><br></pre></td></tr></table></figure><h1 id="3-spyder-kreas检测是不是可以使用"><a href="#3-spyder-kreas检测是不是可以使用" class="headerlink" title="3.spyder kreas检测是不是可以使用"></a>3.spyder kreas检测是不是可以使用</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">import tensorflow as tf  </span><br><span class="line">import numpy as np  </span><br><span class="line"></span><br><span class="line">#import keras    装完keras后，去掉#尝试运行，用于检验安装  </span><br><span class="line"></span><br><span class="line">x=tf.placeholder(&quot;float&quot;)  </span><br><span class="line">y=tf.placeholder(&quot;float&quot;)  </span><br><span class="line">w=tf.Variable([1.0,2.0],name=&apos;w&apos;)  </span><br><span class="line">y_pred=tf.multiply(x,w[0])+w[1]  </span><br><span class="line">error=tf.square(y-y_pred)  </span><br><span class="line"> </span><br><span class="line">train_op=tf.train.GradientDescentOptimizer(0.02).minimize(error)  </span><br><span class="line">model=tf.initialize_all_variables()  </span><br><span class="line"> </span><br><span class="line">with tf.Session() as session:  </span><br><span class="line">    session.run(model)  </span><br><span class="line">    for i in range(1000):  </span><br><span class="line">        x_value=np.random.rand()  </span><br><span class="line">        y_value=x_value*2+6  </span><br><span class="line">        session.run([train_op],feed_dict=&#123;x:x_value,y:y_value&#125;)  </span><br><span class="line">    </span><br><span class="line">    w_value=session.run(w)# get w</span><br><span class="line">    print (&quot;ax+b,a=%.3f,b=%.3f&quot;%(w_value[0],w_value[1]))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> tensorflow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tensorflow </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>tensorflow</title>
      <link href="/2018/12/20/java%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83/"/>
      <url>/2018/12/20/java%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83/</url>
      
        <content type="html"><![CDATA[<h1 id="1-忽略警告"><a href="#1-忽略警告" class="headerlink" title="1.忽略警告"></a>1.忽略警告</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import os  </span><br><span class="line">os.environ[&apos;TF_CPP_MIN_LOG_LEVEL&apos;]=&apos;2&apos;</span><br></pre></td></tr></table></figure><h1 id="2-运行"><a href="#2-运行" class="headerlink" title="#2.运行"></a>#2.运行</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import tensorflow as tf</span><br><span class="line">hello = tf.constant(&apos;Hello, TensorFlow!&apos;)</span><br><span class="line">sess = tf.Session()</span><br><span class="line">print(sess.run(hello))</span><br><span class="line">print(&quot;hello world!!&quot;)</span><br><span class="line">注意：：：</span><br><span class="line">global_variables_initializer()替换</span><br></pre></td></tr></table></figure><h1 id="3-测试"><a href="#3-测试" class="headerlink" title="#3.测试"></a>#3.测试</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import tensorflow as tf</span><br><span class="line">import numpy as np</span><br><span class="line">#import keras    装完keras后，去掉#尝试运行，用于检验安装</span><br><span class="line">x=tf.placeholder(&quot;float&quot;)</span><br><span class="line">y=tf.placeholder(&quot;float&quot;)</span><br><span class="line">w=tf.Variable([1.0,2.0],name=&apos;w&apos;)</span><br><span class="line">y_pred=tf.multiply(x,w[0])+w[1]</span><br><span class="line">error=tf.square(y-y_pred)</span><br><span class="line">#4.训练</span><br><span class="line">train_op=tf.train.GradientDescentOptimizer(0.02).minimize(error)</span><br><span class="line">model=tf.initialize_all_variables()</span><br><span class="line"> </span><br><span class="line">with tf.Session() as session:</span><br><span class="line">    session.run(model)</span><br><span class="line">    for i in range(1000):</span><br><span class="line">        x_value=np.random.rand() </span><br><span class="line">        y_value=x_value*2+6</span><br><span class="line">        session.run([train_op],feed_dict=&#123;x:x_value,y:y_value&#125;)</span><br><span class="line"> </span><br><span class="line">    w_value=session.run(w)# get w</span><br><span class="line">    print (&quot;ax+b,a=%.3f,b=%.3f&quot;%(w_value[0],w_value[1]))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
